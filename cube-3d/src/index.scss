$containerSize: 150px;
$translateZDistance: 75px;
$hoverTranslateZDistance: 200px;
$imageCount: 6;
$routateArr: rotate(0deg),
rotateX(-180deg),
rotateX(90deg),
rotateX(-90deg),
rotateY(90deg),
rotateY(-90deg);

@mixin layerOne ($i, $rotation, $bgImg) {
    .container div:nth-child(#{$i}) {
        transform: #{$rotation} translateZ($translateZDistance);
        background: url("./images/#{$bgImg}.jpg") white no-repeat center/cover;
    }
}

@mixin layerTwo ($i, $rotation, $bgImg) {
    @include layerOne($i, $rotation, $bgImg);

    .container:hover div:nth-child(#{$i}) {
        transform: #{$rotation} translateZ($hoverTranslateZDistance);
    }
}


* {
    padding: 0;
    margin: 0
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
    background-color: #000;
    perspective: 1000px;
}

.container {
    position: relative;
    width: $containerSize;
    height: $containerSize;
    transform-style: preserve-3d;
    animation: rotate 15s linear infinite;

    div {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background-color: #fff;
        transition: all 1s;
    }
}


@for $i from 1 through $imageCount {
    @include layerOne($i, nth($routateArr, $i), $i);
}

@for $i from ($imageCount + 1) through ($imageCount * 2) {
    @include layerTwo($i, nth($routateArr, $i - $imageCount), $i - $imageCount);
}


@keyframes rotate {
    0% {
        transform: rotateY(0deg) rotateX(0deg);
    }
    100% {
        transform: rotateY(360deg) rotateX(360deg);
    }
}